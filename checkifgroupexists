package main

import (
    "fmt"
    "net/http"
    "io/ioutil"
)

const (
    jfrogURL = "https://<your-artifactory-url>/artifactory"
    apiKey   = "<your-api-key>"
    groupName = "my-group"
)

func main() {
    exists, err := checkGroupExists(groupName)
    if err != nil {
        fmt.Println("Error checking group:", err)
        return
    }
    
    if exists {
        fmt.Println("Group exists.")
    } else {
        fmt.Println("Group does not exist.")
    }
}

func checkGroupExists(groupName string) (bool, error) {
    url := fmt.Sprintf("%s/api/security/groups/%s", jfrogURL, groupName)
    req, err := http.NewRequest("GET", url, nil)
    if err != nil {
        return false, err
    }
    req.Header.Set("X-JFrog-Art-Api", apiKey)

    client := &http.Client{}
    resp, err := client.Do(req)
    if err != nil {
        return false, err
    }
    defer resp.Body.Close()

    if resp.StatusCode == http.StatusOK {
        return true, nil
    }
    if resp.StatusCode == http.StatusNotFound {
        return false, nil
    }

    body, _ := ioutil.ReadAll(resp.Body)
    return false, fmt.Errorf("unexpected status code: %d, body: %s", resp.StatusCode, string(body))
}
